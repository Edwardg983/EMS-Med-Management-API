{"version":3,"sources":["../../src/controller/medication.js"],"names":["config","db","api","post","req","res","newMed","Medication","name","body","expDate","quantity","box","truck","save","err","send","json","message","get","find","medications","params","console","log","distinct","medNames","sort","truckNames","boxNames","put","findById","id","medication","delete","status","remove","_id"],"mappings":"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","file":"medication.js","sourcesContent":["import mongoose from 'mongoose';\nimport { Router } from 'express'\nimport Medication from '../model/medication';\nimport MedicationName from '../model/medName';\nimport TruckName from '../model/truckName'\nimport BoxName from '../model/boxName'\nimport bodyParser from 'body-parser';\nimport passport from 'passport';\n\nimport { authenticate } from '../middleware/authMiddleware';\n\nexport default({ config, db }) => {\n  let api = Router();\n\n  // '/v1/medication/add' - Create\n  // This function will add a new med to the DB.\n  // TODO: I'VE DISABLED AUTH TEMP, DON'T FORGET TO ENABLE\n  api.post('/add', (req, res) => {\n    let newMed = new Medication();\n    newMed.name = req.body.name;\n    newMed.expDate = req.body.expDate;\n    newMed.quantity = req.body.quantity;\n    newMed.box = req.body.box;\n    newMed.truck = req.body.truck;\n\n    newMed.save(err => {\n      if (err){\n        res.send(err);\n      }\n      res.json({message: 'Medication saved successfully'});\n    });\n  });\n\n  // '/v1/medication' - Read\n  // Returns the entire DB.\n  api.get('/', (req,res) => {\n    Medication.find({}, (err, medications) => {\n      if (err) {\n        res.send(err);\n      }\n      res.json(medications);\n    });\n  });\n\n  // '/v1/medication/:id' - Read 1\n  // Finds a med by its id.\n  // api.get('/:id', (req, res) => {\n  //   Medication.findById(req.params.id, (err, medication) => {\n  //     if (err) {\n  //       res.send(err);\n  //     }\n  //     res.json(medication);\n  //   });\n  // });\n\n  // TODO: '/v1/medication/medUsed' - Reads med by name, truck, box (Believe this will be a MongoDB find operation). Look in the back of green UNH\n  // notebook for addtional notes on this function.\n  // AS OF 12/22/17 THIS FUNC WORKS.\n  // Returns all the meds by a specific name on a specific truck in a specific box.\n\n  api.get('/medUsed/:name/:truck/:box', (req, res) => {\n    Medication.find({name: req.params.name, truck: req.params.truck, box: req.params.box}, (err, medications) => {\n      if (err) {\n        res.send(err);\n      }\n      res.json(medications);\n    });\n  });\n\n  api.get('/getMedExists/:name/:truck/:box/:expDate', (req, res) => {\n    console.log(req.params.expDate);\n    Medication.find({name: req.params.name, truck: req.params.truck, box: req.params.box, expDate: req.params.expDate}, (err, medications) => {\n      if (err) {\n        res.send(err);\n      }\n      res.json(medications);\n    });\n  });\n\n  // Returns all the meds with the specified name in all the trucks. Will also indicate which box they are in.\n  api.get('/medUsed/:name', (req, res) => {\n    Medication.find({\"name\": req.params.name}, (err, medications) => {\n      if (err) {\n        res.send(err);\n      }\n      res.json(medications);\n    });\n  });\n\n  // '/v1/medication/getDistinctMedNames'\n  // Returns the distinct med names.\n  api.get('/getDistinctMedNames', (req, res) =>{\n    Medication.distinct((\"name\"), (err, medNames) => {\n      if (err) {\n        res.send(err);\n      }\n      medNames.sort();\n      res.json(medNames);\n    });\n  });\n\n  // '/v1/medication/getDistinctTruckNames'\n  // Returns the distinct med names.\n  api.get('/getDistinctTruckNames', (req, res) =>{\n    Medication.distinct((\"truck\"), (err, truckNames) => {\n      if (err) {\n        res.send(err);\n      }\n      truckNames.sort()\n      res.json(truckNames);\n    });\n  });\n\n  // '/v1/medication/getDistinctBoxNames'\n  // Returns the distinct med names.\n  api.get('/getDistinctBoxNames', (req, res) =>{\n    Medication.distinct((\"box\"), (err, boxNames) => {\n      if (err) {\n        res.send(err);\n      }\n      boxNames.sort()\n      res.json(boxNames);\n    });\n  });\n\n  // // '/v1/medication/:id' - Update\n  // // Updates a med.\n  // api.put('/:id', authenticate, (req, res) => {\n  //   Medication.findById(req.params.id, (err, medication) => {\n  //     if (err) {\n  //       res.send(err);\n  //     }\n  //     medication.name = req.body.name;\n  //     medication.expDate = req.body.expDate;\n  //     medication.quantity = req.body.quantity;\n  //     medication.box = req.body.box;\n  //     medication.truck = req.body.truck;\n  //\n  //     medication.save(err => {\n  //       if (err) {\n  //         res.send(err);\n  //       }\n  //       res.json({message: 'Medication info updated successfully'});\n  //     });\n  //   });\n  // });\n\n  // '/v1/medication/:id' - Update\n  // Updates a med.\n  // TODO: I'VE DISABLED AUTH TEMP, DON'T FORGET TO ENABLE\n  api.put('/update/:id', (req, res) => {\n    Medication.findById(req.params.id, (err, medication) => {\n      if (err) {\n        res.send(err);\n      }\n      medication.name = req.body.name;\n      medication.expDate = req.body.expDate;\n      medication.quantity = req.body.quantity;\n      medication.box = req.body.box;\n      medication.truck = req.body.truck;\n\n      medication.save(err => {\n        if (err) {\n          res.send(err);\n        }\n        res.json({message: 'Medication info updated successfully'});\n      });\n    });\n  });\n\n  // '/v1/medication/:id' - Delete\n  // Deletes a med from the DB\n  // TODO: I'VE DISABLED AUTH TEMP, DON'T FORGET TO ENABLE\n  api.delete('/:id', (req, res) => {\n    Medication.findById(req.params.id, (err, medication) => {\n      if (err) {\n        res.status(505).send(err);\n        return;\n      }\n      if (medication === null) {\n        res.status(404).send(err);\n        return;\n      }\n      Medication.remove({\n        _id: req.params.id\n      }, (err, Medication) => {\n        if (err) {\n          res.send(err);\n        }\n        res.json({message: \"Medication successfully deleted\"});\n      });\n    });\n  });\n\n\n  return api;\n\n}\n"]}